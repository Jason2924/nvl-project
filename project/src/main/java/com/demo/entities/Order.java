package com.demo.entities;
// Generated Jun 4, 2020 2:35:22 PM by Hibernate Tools 5.1.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "nvl", uniqueConstraints = @UniqueConstraint(columnNames = "code"))
public class Order implements java.io.Serializable {

	private Integer id;
	private Account account;
	private String code;
	private String status;
	private String customerName;
	private String customerPhone;
	private String customerEmail;
	private Date createdDate;
	private Date modifiedDate;
	private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);
	private Set<Payment> payments = new HashSet<Payment>(0);
	private Set<Exchange> exchanges = new HashSet<Exchange>(0);
	private Set<Delivery> deliveries = new HashSet<Delivery>(0);

	public Order() {
	}

	public Order(Date createdDate, Date modifiedDate) {
		this.createdDate = createdDate;
		this.modifiedDate = modifiedDate;
	}

	public Order(Account account, String code, String status, String customerName, String customerPhone,
			String customerEmail, Date createdDate, Date modifiedDate, Set<OrderDetail> orderDetails,
			Set<Payment> payments, Set<Exchange> exchanges, Set<Delivery> deliveries) {
		this.account = account;
		this.code = code;
		this.status = status;
		this.customerName = customerName;
		this.customerPhone = customerPhone;
		this.customerEmail = customerEmail;
		this.createdDate = createdDate;
		this.modifiedDate = modifiedDate;
		this.orderDetails = orderDetails;
		this.payments = payments;
		this.exchanges = exchanges;
		this.deliveries = deliveries;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "accountId")
	public Account getAccount() {
		return this.account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

	@Column(name = "code", unique = true, length = 10)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "status", length = 100)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "customerName", length = 250)
	public String getCustomerName() {
		return this.customerName;
	}

	public void setCustomerName(String customerName) {
		this.customerName = customerName;
	}

	@Column(name = "customerPhone", length = 250)
	public String getCustomerPhone() {
		return this.customerPhone;
	}

	public void setCustomerPhone(String customerPhone) {
		this.customerPhone = customerPhone;
	}

	@Column(name = "customerEmail", length = 250)
	public String getCustomerEmail() {
		return this.customerEmail;
	}

	public void setCustomerEmail(String customerEmail) {
		this.customerEmail = customerEmail;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdDate", nullable = false, insertable = false, updatable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modifiedDate", nullable = false, insertable = false, updatable = false, length = 19)
	public Date getModifiedDate() {
		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	public void setOrderDetails(Set<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Payment> getPayments() {
		return this.payments;
	}

	public void setPayments(Set<Payment> payments) {
		this.payments = payments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Exchange> getExchanges() {
		return this.exchanges;
	}

	public void setExchanges(Set<Exchange> exchanges) {
		this.exchanges = exchanges;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Delivery> getDeliveries() {
		return this.deliveries;
	}

	public void setDeliveries(Set<Delivery> deliveries) {
		this.deliveries = deliveries;
	}

}
